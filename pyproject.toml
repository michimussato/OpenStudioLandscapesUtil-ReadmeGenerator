[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "OpenStudioLandscapes-Template"
description = "Template Feature for OpenStudioLandscapes"
authors = [{name = "Michael Mussato", email = "michimussato@gmail.com"}]
license = {text = "AGPL-3.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
]
requires-python = ">=3.11"
dependencies = [
    'importlib-metadata; python_version<"3.8"',
    "dagster==1.9.11",
    "gitpython",
    "PyYAML",
    # yaml_tags.overrides:
    "docker-compose-graph @ git+https://github.com/michimussato/docker-compose-graph.git@v1.0.0",
    "OpenStudioLandscapes @ git+https://github.com/michimussato/OpenStudioLandscapes@v1.0.3",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown; charset=UTF-8"
# Change if running only on Windows, Mac or Linux (comma-separated)
# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/

[project.urls]
Homepage = "https://github.com/michimussato/OpenStudioLandscapes-Template"

[project.optional-dependencies]
# Add here additional requirements for extra features, to install with:
# `pip install OpenStudioLandscapes-Template[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing = [
    "setuptools",
    "pytest",
    "pytest-cov",
]
graphviz = [
    "graphviz",
    "pipdeptree",
]
sbom = [
    "OpenStudioLandscapes-Template[graphviz]",
    "cyclonedx-bom",
]
lint = [
    "black",
    "isort",
    "pre-commit",
    "pylint",
]
coverage = [
    "coverage",
    "pytest",
]
nox = [
    "OpenStudioLandscapes-Template[testing]",
    "nox",
]
readme = ["OpenStudioLandscapesUtil-ReadmeGenerator @ git+https://github.com/michimussato/OpenStudioLandscapesUtil-ReadmeGenerator.git@v1.0.1"]
dev = [
    "OpenStudioLandscapes-Template[testing]",
    "OpenStudioLandscapes-Template[lint]",
    "OpenStudioLandscapes-Template[nox]",
    "OpenStudioLandscapes-Template[sbom]",
    "OpenStudioLandscapes-Template[coverage]",
    "OpenStudioLandscapes-Template[readme]",
    "dagster-webserver==1.9.11",
]

[project.entry-points]
# Add here console scripts like:
# console_scripts =
# script_name = OpenStudioLandscapes.Template.module:function
# For example:
# console_scripts =
# fibonacci = OpenStudioLandscapes.Template.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
# awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool.setuptools]
zip-safe = false
include-package-data = true
package-dir = {"" = "src"}
# Require a min/specific Python version (comma-separated conditions)
# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
platforms = ["Linux"]
license-files = ["LICENSE.txt"]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]
namespaces = true

[tool.pytest.ini_options]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
# Comment those flags to avoid this pytest issue.
addopts = """
--cov OpenStudioLandscapes.Template --cov-report term-missing
--verbose"""
norecursedirs = [
    "dist",
    "build",
    ".nox",
]
testpaths = ["tests"]
# Use pytest markers to select/deselect specific tests
# markers =
# slow: mark tests as slow (deselect with '-m "not slow"')
# system: mark end-to-end system tests

# [tool.devpi.upload]
# # Options for the devpi: PyPI server and packaging tool
# # VCS export must be deactivated since we are using setuptools-scm
# no_vcs = "1"
# formats = "bdist_wheel"
#
# [tool.flake8]
# # Some sane defaults for the code style checker flake8
# max_line_length = "88"
# extend_ignore = "E203, W503"
# # ^  Black-compatible
# # E203 and W503 have edge cases handled by black
# exclude = """
# .nox
# .svg
# build
# dist
# .eggs
# docs/conf.py"""

[tool.dagster]
# We can define ONE SINGLE TOP-LEVEL code location
# here in this pyproject.toml.
# If you want to be able to define multiple
# top-level code locations, comment out this
# section and define them in a workspace.yaml
# More info here:
# https://docs.dagster.io/guides/build/projects/dagster-project-file-reference
module_name = "OpenStudioLandscapes.Template.definitions"
code_location_name = "OpenStudioLandscapes-Template"

# [tool.pyscaffold]
# # PyScaffold's parameters when the project was created.
# # This will be used when updating. Do not change!
# version = "4.6"
# package = "Template"
# extensions = """
# namespace
# no_skeleton"""
# namespace = "OpenStudioLandscapes"
# # This file is used to configure your project.
# # Read more about the various options under:
# # https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# # https://setuptools.pypa.io/en/latest/references/keywords.html
